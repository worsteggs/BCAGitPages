"use strict";(self["webpackChunkbrain_web"]=self["webpackChunkbrain_web"]||[]).push([[148],{4148:function(e,a,t){t.r(a),t.d(a,{default:function(){return m}});var l=function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("div",{staticClass:"filter-cell"},[t("div",[t("el-checkbox",{staticClass:"filter-check-txt",model:{value:e.params.notFlag,callback:function(a){e.$set(e.params,"notFlag",a)},expression:"params.notFlag"}},[e._v(" Exclude ")]),t("span",{staticClass:"filter-cell-label"},[e._v("gene")]),t("el-select",{staticStyle:{width:"160px"},attrs:{disabled:e.disabled,filterable:"",remote:"","reserve-keyword":"",placeholder:"Filter by name","remote-method":e.fetchGenes,loading:e.loading},model:{value:e.params.gene,callback:function(a){e.$set(e.params,"gene",a)},expression:"params.gene"}},e._l(e.options,(function(e){return t("el-option",{key:e.value,attrs:{label:e.name,value:e.value}})})),1),e._v("  min "),t("el-input",{staticStyle:{width:"100px"},attrs:{placeholder:"min",clearable:""},model:{value:e.params.min,callback:function(a){e.$set(e.params,"min",a)},expression:"params.min"}}),e._v("  max "),t("el-input",{staticStyle:{width:"100px"},attrs:{placeholder:"max",clearable:""},model:{value:e.params.max,callback:function(a){e.$set(e.params,"max",a)},expression:"params.max"}})],1),t("filterIcon",{attrs:{questionTip:"Select cells that has certain gene express level within a range"},on:{close:function(a){return e.$emit("close")}}})],1)},n=[],s=t(4190),i={props:{params:{type:Object,default:function(){return{}}},disabled:{type:Boolean,default:!1}},components:{filterIcon:()=>t.e(73).then(t.bind(t,3073))},data(){return{loading:!1,options:[]}},mounted(){this.fetchGenes("A")},methods:{async fetchGenes(e=""){this.loading=!0;const a=await(0,s.zp)({fileName:"csv/genes.csv",filters:[{column:"x",filter:e,isLike:!0}],returnColumn:["x"],maxLength:20});this.options=a.x.map((e=>({value:e,name:e}))),this.loading=!1}}},r=i,c=t(3736),o=(0,c.Z)(r,l,n,!1,null,"08f34f6a",null),m=o.exports}}]);